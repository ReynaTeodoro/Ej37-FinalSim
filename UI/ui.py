# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pantSimulacion.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5.QtWidgets import QApplication, QMainWindow, QTableWidgetItem, QMessageBox
import numpy as np
from Clases.simulacion import Simulacion
from PyQt5.QtCore import Qt
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtWidgets import QDialog, QVBoxLayout, QLabel, QPushButton
class Ui_SimulacionRestaurant(object):
    def setupUi(self, SimulacionRestaurant):
        SimulacionRestaurant.setObjectName("SimulacionRestaurant")
        SimulacionRestaurant.resize(1202, 743)
        self.gridLayout = QtWidgets.QGridLayout(SimulacionRestaurant)
        self.gridLayout.setObjectName("gridLayout")
        self.layoutSimDatos = QtWidgets.QFormLayout()
        self.layoutSimDatos.setObjectName("layoutSimDatos")
        self.lbl_t0 = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_t0.setObjectName("lbl_t0")
        self.layoutSimDatos.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.lbl_t0)
        self.input_to = QtWidgets.QDoubleSpinBox(SimulacionRestaurant)
        self.input_to.setMaximum(99999.99)
        self.input_to.setObjectName("input_to")
        self.layoutSimDatos.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.input_to)
        self.lbl_tf = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_tf.setObjectName("lbl_tf")
        self.layoutSimDatos.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.lbl_tf)
        self.input_tf = QtWidgets.QSpinBox(SimulacionRestaurant)
        self.input_tf.setMaximum(99999999)
        self.input_tf.setObjectName("input_tf")
        self.layoutSimDatos.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.input_tf)
        self.lbli0 = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbli0.setObjectName("lbli0")
        self.layoutSimDatos.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.lbli0)
        self.input_i0 = QtWidgets.QSpinBox(SimulacionRestaurant)
        self.input_i0.setSuffix("")
        self.input_i0.setMaximum(999999999)
        self.input_i0.setObjectName("input_i0")
        self.layoutSimDatos.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.input_i0)
        self.lbl_i = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_i.setObjectName("lbl_i")
        self.layoutSimDatos.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.lbl_i)
        self.input_i = QtWidgets.QSpinBox(SimulacionRestaurant)
        self.input_i.setMaximum(999999999)
        self.input_i.setProperty("value", 100)
        self.input_i.setObjectName("input_i")
        self.layoutSimDatos.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.input_i)
        self.lbl_simulacion = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_simulacion.setObjectName("lbl_simulacion")
        self.layoutSimDatos.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.lbl_simulacion)
        self.gridLayout.addLayout(self.layoutSimDatos, 0, 0, 1, 1)
        self.layout_Menu = QtWidgets.QVBoxLayout()
        self.layout_Menu.setObjectName("layout_Menu")
        self.lbl_menu = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_menu.setObjectName("lbl_menu")
        self.layout_Menu.addWidget(self.lbl_menu)
        self.tbl_menu = QtWidgets.QTableWidget(SimulacionRestaurant)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tbl_menu.sizePolicy().hasHeightForWidth())
        self.tbl_menu.setSizePolicy(sizePolicy)
        self.tbl_menu.setMinimumSize(QtCore.QSize(0, 100))
        self.tbl_menu.setWordWrap(True)
        self.tbl_menu.setObjectName("tbl_menu")
        self.tbl_menu.setColumnCount(3)
        self.tbl_menu.setRowCount(4)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_menu.setItem(3, 1, item)
        self.tbl_menu.horizontalHeader().setVisible(True)
        self.tbl_menu.horizontalHeader().setCascadingSectionResizes(True)
        self.tbl_menu.horizontalHeader().setDefaultSectionSize(70)
        self.tbl_menu.horizontalHeader().setMinimumSectionSize(10)
        self.tbl_menu.horizontalHeader().setStretchLastSection(True)
        self.tbl_menu.verticalHeader().setCascadingSectionResizes(False)
        self.layout_Menu.addWidget(self.tbl_menu)
        self.layout_botones_menu = QtWidgets.QHBoxLayout()
        self.layout_botones_menu.setObjectName("layout_botones_menu")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.layout_botones_menu.addItem(spacerItem)
        self.btn_add_menu = QtWidgets.QPushButton(SimulacionRestaurant)
        self.btn_add_menu.setObjectName("btn_add_menu")
        self.layout_botones_menu.addWidget(self.btn_add_menu)
        self.btn_validar_menu = QtWidgets.QPushButton(SimulacionRestaurant)
        self.btn_validar_menu.setObjectName("btn_validar_menu")
        self.layout_botones_menu.addWidget(self.btn_validar_menu)
        self.layout_Menu.addLayout(self.layout_botones_menu)
        self.gridLayout.addLayout(self.layout_Menu, 0, 1, 2, 2)
        self.layout_grupos = QtWidgets.QVBoxLayout()
        self.layout_grupos.setObjectName("layout_grupos")
        self.lbl_grupo = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_grupo.setObjectName("lbl_grupo")
        self.layout_grupos.addWidget(self.lbl_grupo)
        self.tbl_grupo = QtWidgets.QTableWidget(SimulacionRestaurant)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tbl_grupo.sizePolicy().hasHeightForWidth())
        self.tbl_grupo.setSizePolicy(sizePolicy)
        self.tbl_grupo.setMinimumSize(QtCore.QSize(0, 100))
        self.tbl_grupo.setWordWrap(True)
        self.tbl_grupo.setObjectName("tbl_grupo")
        self.tbl_grupo.setColumnCount(2)
        self.tbl_grupo.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_grupo.setItem(4, 1, item)
        self.tbl_grupo.horizontalHeader().setVisible(True)
        self.tbl_grupo.horizontalHeader().setCascadingSectionResizes(True)
        self.tbl_grupo.horizontalHeader().setDefaultSectionSize(70)
        self.tbl_grupo.horizontalHeader().setMinimumSectionSize(10)
        self.tbl_grupo.horizontalHeader().setStretchLastSection(True)
        self.tbl_grupo.verticalHeader().setCascadingSectionResizes(False)
        self.layout_grupos.addWidget(self.tbl_grupo)
        self.layout_botones_grupo = QtWidgets.QHBoxLayout()
        self.layout_botones_grupo.setObjectName("layout_botones_grupo")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.layout_botones_grupo.addItem(spacerItem1)
        self.btn_add_grupo = QtWidgets.QPushButton(SimulacionRestaurant)
        self.btn_add_grupo.setObjectName("btn_add_grupo")
        self.layout_botones_grupo.addWidget(self.btn_add_grupo)
        self.btn_validar_grupo = QtWidgets.QPushButton(SimulacionRestaurant)
        self.btn_validar_grupo.setObjectName("btn_validar_grupo")
        self.layout_botones_grupo.addWidget(self.btn_validar_grupo)
        self.layout_grupos.addLayout(self.layout_botones_grupo)
        self.gridLayout.addLayout(self.layout_grupos, 0, 3, 3, 1)
        self.layout_Objetos = QtWidgets.QFormLayout()
        self.layout_Objetos.setObjectName("layout_Objetos")
        self.input_mesas_2 = QtWidgets.QSpinBox(SimulacionRestaurant)
        self.input_mesas_2.setMinimum(1)
        self.input_mesas_2.setMaximum(999999999)
        self.input_mesas_2.setProperty("value", 6)
        self.input_mesas_2.setObjectName("input_mesas_2")
        self.layout_Objetos.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.input_mesas_2)
        self.lbl_mozos_2 = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_mozos_2.setObjectName("lbl_mozos_2")
        self.layout_Objetos.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.lbl_mozos_2)
        self.input_mozos_2 = QtWidgets.QSpinBox(SimulacionRestaurant)
        self.input_mozos_2.setMinimum(1)
        self.input_mozos_2.setMaximum(999999999)
        self.input_mozos_2.setObjectName("input_mozos_2")
        self.layout_Objetos.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.input_mozos_2)
        self.lbl_mesas_2 = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_mesas_2.setObjectName("lbl_mesas_2")
        self.layout_Objetos.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.lbl_mesas_2)
        self.lbl_objeto = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_objeto.setObjectName("lbl_objeto")
        self.layout_Objetos.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.lbl_objeto)
        self.gridLayout.addLayout(self.layout_Objetos, 1, 0, 1, 1)
        self.layout_eventos = QtWidgets.QGridLayout()
        self.layout_eventos.setObjectName("layout_eventos")
        self.lbl_llegada_clientes = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_llegada_clientes.setObjectName("lbl_llegada_clientes")
        self.layout_eventos.addWidget(self.lbl_llegada_clientes, 1, 0, 1, 1)
        self.input_llevado_pedido = QtWidgets.QLabel(SimulacionRestaurant)
        self.input_llevado_pedido.setObjectName("input_llevado_pedido")
        self.layout_eventos.addWidget(self.input_llevado_pedido, 3, 0, 1, 1)
        self.input_media_comer = QtWidgets.QLabel(SimulacionRestaurant)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.input_media_comer.sizePolicy().hasHeightForWidth())
        self.input_media_comer.setSizePolicy(sizePolicy)
        self.input_media_comer.setObjectName("input_media_comer")
        self.layout_eventos.addWidget(self.input_media_comer, 4, 1, 1, 1)
        self.input_comer_media = QtWidgets.QDoubleSpinBox(SimulacionRestaurant)
        self.input_comer_media.setProperty("value", 60.0)
        self.input_comer_media.setObjectName("input_comer_media")
        self.layout_eventos.addWidget(self.input_comer_media, 4, 2, 1, 1)
        self.input_toma_pedido = QtWidgets.QLabel(SimulacionRestaurant)
        self.input_toma_pedido.setObjectName("input_toma_pedido")
        self.layout_eventos.addWidget(self.input_toma_pedido, 2, 0, 1, 1)
        self.input_devstand_comer = QtWidgets.QLabel(SimulacionRestaurant)
        self.input_devstand_comer.setObjectName("input_devstand_comer")
        self.layout_eventos.addWidget(self.input_devstand_comer, 4, 3, 1, 1)
        self.input_comer = QtWidgets.QLabel(SimulacionRestaurant)
        self.input_comer.setObjectName("input_comer")
        self.layout_eventos.addWidget(self.input_comer, 4, 0, 1, 1)
        self.input_comer_devEstandar = QtWidgets.QDoubleSpinBox(SimulacionRestaurant)
        self.input_comer_devEstandar.setProperty("value", 20.0)
        self.input_comer_devEstandar.setObjectName("input_comer_devEstandar")
        self.layout_eventos.addWidget(self.input_comer_devEstandar, 4, 4, 1, 1)
        self.check_media_llegadaClientes = QtWidgets.QCheckBox(SimulacionRestaurant)
        self.check_media_llegadaClientes.setObjectName("check_media_llegadaClientes")
        self.layout_eventos.addWidget(self.check_media_llegadaClientes, 1, 4, 1, 1)
        self.check_media_tomaPedido = QtWidgets.QCheckBox(SimulacionRestaurant)
        self.check_media_tomaPedido.setObjectName("check_media_tomaPedido")
        self.layout_eventos.addWidget(self.check_media_tomaPedido, 2, 4, 1, 1)
        self.check_media_llevadoPedido = QtWidgets.QCheckBox(SimulacionRestaurant)
        self.check_media_llevadoPedido.setObjectName("check_media_llevadoPedido")
        self.layout_eventos.addWidget(self.check_media_llevadoPedido, 3, 4, 1, 1)
        self.input_llegadaClientes = QtWidgets.QDoubleSpinBox(SimulacionRestaurant)
        self.input_llegadaClientes.setDecimals(3)
        self.input_llegadaClientes.setMinimum(0.001)
        self.input_llegadaClientes.setMaximum(9999999.99)
        self.input_llegadaClientes.setProperty("value", 10.0)
        self.input_llegadaClientes.setObjectName("input_llegadaClientes")
        self.layout_eventos.addWidget(self.input_llegadaClientes, 1, 1, 1, 3)
        self.input_tomaPedido = QtWidgets.QDoubleSpinBox(SimulacionRestaurant)
        self.input_tomaPedido.setDecimals(3)
        self.input_tomaPedido.setMinimum(0.001)
        self.input_tomaPedido.setMaximum(9999999.99)
        self.input_tomaPedido.setProperty("value", 1.0)
        self.input_tomaPedido.setObjectName("input_tomaPedido")
        self.layout_eventos.addWidget(self.input_tomaPedido, 2, 1, 1, 3)
        self.input_llevadoPedido = QtWidgets.QDoubleSpinBox(SimulacionRestaurant)
        self.input_llevadoPedido.setDecimals(3)
        self.input_llevadoPedido.setMinimum(0.001)
        self.input_llevadoPedido.setMaximum(9999999.99)
        self.input_llevadoPedido.setProperty("value", 2.0)
        self.input_llevadoPedido.setObjectName("input_llevadoPedido")
        self.layout_eventos.addWidget(self.input_llevadoPedido, 3, 1, 1, 3)
        self.lbl_eventos = QtWidgets.QLabel(SimulacionRestaurant)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_eventos.sizePolicy().hasHeightForWidth())
        self.lbl_eventos.setSizePolicy(sizePolicy)
        self.lbl_eventos.setObjectName("lbl_eventos")
        self.layout_eventos.addWidget(self.lbl_eventos, 0, 0, 1, 5)
        self.gridLayout.addLayout(self.layout_eventos, 2, 0, 2, 2)
        self.layoutResultados = QtWidgets.QGridLayout()
        self.layoutResultados.setObjectName("layoutResultados")
        self.rta_porcentaje_rechazadas = QtWidgets.QLabel(SimulacionRestaurant)
        self.rta_porcentaje_rechazadas.setText("")
        self.rta_porcentaje_rechazadas.setObjectName("rta_porcentaje_rechazadas")
        self.layoutResultados.addWidget(self.rta_porcentaje_rechazadas, 5, 1, 1, 1)
        self.lbl_seed = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_seed.setObjectName("lbl_seed")
        self.layoutResultados.addWidget(self.lbl_seed, 1, 0, 1, 1)
        self.btn_simular = QtWidgets.QPushButton(SimulacionRestaurant)
        self.btn_simular.setObjectName("btn_simular")
        self.layoutResultados.addWidget(self.btn_simular, 6, 1, 1, 1)
        self.rta_rechazadas = QtWidgets.QLabel(SimulacionRestaurant)
        self.rta_rechazadas.setObjectName("rta_rechazadas")
        self.layoutResultados.addWidget(self.rta_rechazadas, 4, 0, 1, 1)
        self.rta_seed = QtWidgets.QLabel(SimulacionRestaurant)
        self.rta_seed.setText("")
        self.rta_seed.setObjectName("rta_seed")
        self.layoutResultados.addWidget(self.rta_seed, 1, 1, 1, 1)
        self.lbl_atendidas = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_atendidas.setObjectName("lbl_atendidas")
        self.layoutResultados.addWidget(self.lbl_atendidas, 3, 0, 1, 1)
        self.rta_rechazadas_2 = QtWidgets.QLabel(SimulacionRestaurant)
        self.rta_rechazadas_2.setText("")
        self.rta_rechazadas_2.setObjectName("rta_rechazadas_2")
        self.layoutResultados.addWidget(self.rta_rechazadas_2, 4, 1, 1, 1)
        self.lbl_porcentaje_rechazadas = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_porcentaje_rechazadas.setObjectName("lbl_porcentaje_rechazadas")
        self.layoutResultados.addWidget(self.lbl_porcentaje_rechazadas, 5, 0, 1, 1)
        self.rta_atendidas = QtWidgets.QLabel(SimulacionRestaurant)
        self.rta_atendidas.setText("")
        self.rta_atendidas.setObjectName("rta_atendidas")
        self.layoutResultados.addWidget(self.rta_atendidas, 3, 1, 1, 1)
        self.lbl_rtaSimulacion = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_rtaSimulacion.setObjectName("lbl_rtaSimulacion")
        self.layoutResultados.addWidget(self.lbl_rtaSimulacion, 0, 0, 1, 2)
        self.lbl_personas_totales = QtWidgets.QLabel(SimulacionRestaurant)
        self.lbl_personas_totales.setObjectName("lbl_personas_totales")
        self.layoutResultados.addWidget(self.lbl_personas_totales, 2, 0, 1, 1)
        self.rta_personas = QtWidgets.QLabel(SimulacionRestaurant)
        self.rta_personas.setText("")
        self.rta_personas.setObjectName("rta_personas")
        self.layoutResultados.addWidget(self.rta_personas, 2, 1, 1, 1)
        self.gridLayout.addLayout(self.layoutResultados, 3, 2, 1, 2)
        self.tbl_simulacion = QtWidgets.QTableWidget(SimulacionRestaurant)
        self.tbl_simulacion.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tbl_simulacion.setWordWrap(False)
        self.tbl_simulacion.setObjectName("tbl_simulacion")
        self.tbl_simulacion.setColumnCount(30)
        self.tbl_simulacion.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignTop)
        self.tbl_simulacion.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(21, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(22, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(23, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(24, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(25, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(26, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(27, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(28, item)
        item = QtWidgets.QTableWidgetItem()
        self.tbl_simulacion.setHorizontalHeaderItem(29, item)
        self.tbl_simulacion.horizontalHeader().setCascadingSectionResizes(True)
        self.gridLayout.addWidget(self.tbl_simulacion, 4, 0, 1, 4)
        

        self.retranslateUi(SimulacionRestaurant)
        
        QtCore.QMetaObject.connectSlotsByName(SimulacionRestaurant)
        self.input_tf.setValue(1000)

         # Datos de inicialización
        menu_items = [
            {"Menu": "Tm1", "P(%)": "33%", "Minutos preparación": "10"},
            {"Menu": "Tm2", "P(%)": "33%", "Minutos preparación": "15"},
            {"Menu": "Tm3", "P(%)": "34%", "Minutos preparación": "18"},
            {"Menu": "Total", "P(%)": "100%", "Minutos preparación": "-"}
        ]
        
        for row, item in enumerate(menu_items):
            self.tbl_menu.setItem(row, 0, QTableWidgetItem(item["Menu"]))
            self.tbl_menu.setItem(row, 1, QTableWidgetItem(item["P(%)"]))
            self.tbl_menu.setItem(row, 2, QTableWidgetItem(item["Minutos preparación"]))
            if row == len(menu_items) - 1:
                for column in range(self.tbl_menu.columnCount()):
                    item = self.tbl_menu.item(row, column)
                    item.setFlags(item.flags() & ~Qt.ItemIsEditable)
        
        # Desactivar ordenación
        self.tbl_menu.setSortingEnabled(False)
        
        grupos_items=[
            {"Tamaño": 1, "P(%)": "25%"},
            {"Tamaño": 2, "P(%)": "25%"},
            {"Tamaño": 3, "P(%)": "25%"},
            {"Tamaño": 4, "P(%)": "25%"},
            {"Tamaño": "Total", "P(%)": "100%"}
        ]
        for row, item in enumerate(grupos_items):
            self.tbl_grupo.setItem(row, 0, QTableWidgetItem(str(item["Tamaño"])))
            self.tbl_grupo.setItem(row, 1, QTableWidgetItem(str(item["P(%)"])))
            if row == len(grupos_items) - 1:
                for column in range(self.tbl_grupo.columnCount()):
                    item = self.tbl_grupo.item(row, column)
                    item.setFlags(item.flags() & ~Qt.ItemIsEditable)
        # Conectar doble clic
        self.tbl_grupo.setSortingEnabled(False)
        self.tbl_menu.cellDoubleClicked.connect(self.confirm_delete_row_menu)
        self.tbl_grupo.cellDoubleClicked.connect(self.confirm_delete_row_grupo)
        #Validar tablas
        self.btn_simular.clicked.connect(self.simular)
        self.btn_validar_menu.clicked.connect(self.validarTablaMenu)

        #agregar filas
        self.btn_add_grupo.clicked.connect(self.agregarFilaGrupo)
        self.btn_add_menu.clicked.connect(self.agregarFilaMenu)
    def retranslateUi(self, SimulacionRestaurant):
        _translate = QtCore.QCoreApplication.translate
        SimulacionRestaurant.setWindowTitle(_translate("SimulacionRestaurant", "Form"))
        self.lbl_t0.setText(_translate("SimulacionRestaurant", "Minuto Inicial (To):"))
        self.lbl_tf.setText(_translate("SimulacionRestaurant", "Iteracion Final (if):"))
        self.lbli0.setText(_translate("SimulacionRestaurant", "Mostrar Desde (i)"))
        self.lbl_i.setText(_translate("SimulacionRestaurant", "Iteraciones a mostrar"))
        self.lbl_simulacion.setText(_translate("SimulacionRestaurant", "Datos Simulacion"))
        self.lbl_menu.setText(_translate("SimulacionRestaurant", "Datos del Menu"))
        item = self.tbl_menu.verticalHeaderItem(0)
        item.setText(_translate("SimulacionRestaurant", "1"))
        item = self.tbl_menu.verticalHeaderItem(1)
        item.setText(_translate("SimulacionRestaurant", "2"))
        item = self.tbl_menu.verticalHeaderItem(2)
        item.setText(_translate("SimulacionRestaurant", "3"))
        item = self.tbl_menu.verticalHeaderItem(3)
        item.setText(_translate("SimulacionRestaurant", "Total"))
        item = self.tbl_menu.horizontalHeaderItem(0)
        item.setText(_translate("SimulacionRestaurant", "Menu"))
        item = self.tbl_menu.horizontalHeaderItem(1)
        item.setText(_translate("SimulacionRestaurant", "P(%)"))
        item = self.tbl_menu.horizontalHeaderItem(2)
        item.setText(_translate("SimulacionRestaurant", "Minutos preparacion"))
        __sortingEnabled = self.tbl_menu.isSortingEnabled()
        self.tbl_menu.setSortingEnabled(False)
        self.tbl_menu.setSortingEnabled(__sortingEnabled)
        self.btn_add_menu.setText(_translate("SimulacionRestaurant", "Agregar Item"))
        self.btn_validar_menu.setText(_translate("SimulacionRestaurant", "Validar"))
        self.lbl_grupo.setText(_translate("SimulacionRestaurant", "Datos de los grupos"))
        item = self.tbl_grupo.verticalHeaderItem(0)
        item.setText(_translate("SimulacionRestaurant", "1"))
        item = self.tbl_grupo.verticalHeaderItem(1)
        item.setText(_translate("SimulacionRestaurant", "2"))
        item = self.tbl_grupo.verticalHeaderItem(2)
        item.setText(_translate("SimulacionRestaurant", "3"))
        item = self.tbl_grupo.verticalHeaderItem(3)
        item.setText(_translate("SimulacionRestaurant", "4"))
        item = self.tbl_grupo.verticalHeaderItem(4)
        item.setText(_translate("SimulacionRestaurant", "Total"))
        item = self.tbl_grupo.horizontalHeaderItem(0)
        item.setText(_translate("SimulacionRestaurant", "Tamaño"))
        item = self.tbl_grupo.horizontalHeaderItem(1)
        item.setText(_translate("SimulacionRestaurant", "P(%)"))
        __sortingEnabled = self.tbl_grupo.isSortingEnabled()
        self.tbl_grupo.setSortingEnabled(False)
        self.tbl_grupo.setSortingEnabled(__sortingEnabled)
        self.btn_add_grupo.setText(_translate("SimulacionRestaurant", "Agregar Item"))
        self.btn_validar_grupo.setText(_translate("SimulacionRestaurant", "Validar"))
        self.lbl_mozos_2.setText(_translate("SimulacionRestaurant", "Mozos"))
        self.lbl_mesas_2.setText(_translate("SimulacionRestaurant", "Mesas:"))
        self.lbl_objeto.setText(_translate("SimulacionRestaurant", "Datos Restaurante"))
        self.lbl_llegada_clientes.setText(_translate("SimulacionRestaurant", "Llegada de clientes (min)"))
        self.input_llevado_pedido.setText(_translate("SimulacionRestaurant", "Llevado de pedido(min)"))
        self.input_media_comer.setText(_translate("SimulacionRestaurant", "Media:"))
        self.input_toma_pedido.setText(_translate("SimulacionRestaurant", "Toma de pedido(min)"))
        self.input_devstand_comer.setText(_translate("SimulacionRestaurant", "Desv. Estandar"))
        self.input_comer.setText(_translate("SimulacionRestaurant", "Comer (Normal en min)"))
        self.check_media_llegadaClientes.setText(_translate("SimulacionRestaurant", "Es una Media?"))
        self.check_media_tomaPedido.setText(_translate("SimulacionRestaurant", "Es una Media?"))
        self.check_media_llevadoPedido.setText(_translate("SimulacionRestaurant", "Es una Media?"))
        self.lbl_eventos.setText(_translate("SimulacionRestaurant", "Datos Eventos"))
        self.lbl_seed.setText(_translate("SimulacionRestaurant", "Semilla:"))
        self.btn_simular.setText(_translate("SimulacionRestaurant", "Simular"))
        self.rta_rechazadas.setText(_translate("SimulacionRestaurant", "Personas rechazadas"))
        self.lbl_atendidas.setText(_translate("SimulacionRestaurant", "Personas atendidas"))
        self.lbl_porcentaje_rechazadas.setText(_translate("SimulacionRestaurant", "Porcentaje de personas rechazadas"))
        self.lbl_rtaSimulacion.setText(_translate("SimulacionRestaurant", "Resultados de simulacion"))
        self.lbl_personas_totales.setText(_translate("SimulacionRestaurant", "Personas totales"))
        item = self.tbl_simulacion.horizontalHeaderItem(0)
        item.setText(_translate("SimulacionRestaurant", "Evento"))
        item = self.tbl_simulacion.horizontalHeaderItem(1)
        item.setText(_translate("SimulacionRestaurant", "Reloj(min)"))
        item = self.tbl_simulacion.horizontalHeaderItem(2)
        item.setText(_translate("SimulacionRestaurant", "tiempo llegada"))
        item = self.tbl_simulacion.horizontalHeaderItem(3)
        item.setText(_translate("SimulacionRestaurant", "Proxima llegada"))
        item = self.tbl_simulacion.horizontalHeaderItem(4)
        item.setText(_translate("SimulacionRestaurant", "RND tamaño"))
        item = self.tbl_simulacion.horizontalHeaderItem(5)
        item.setText(_translate("SimulacionRestaurant", "Tamaño grupo"))
        item = self.tbl_simulacion.horizontalHeaderItem(6)
        item.setText(_translate("SimulacionRestaurant", "tiempo toma pedido"))
        item = self.tbl_simulacion.horizontalHeaderItem(7)
        item.setText(_translate("SimulacionRestaurant", "tamaño grupo"))
        item = self.tbl_simulacion.horizontalHeaderItem(8)
        item.setText(_translate("SimulacionRestaurant", "Fin toma de pedido"))
        item = self.tbl_simulacion.horizontalHeaderItem(9)
        item.setText(_translate("SimulacionRestaurant", "RND seleccion"))
        item = self.tbl_simulacion.horizontalHeaderItem(10)
        item.setText(_translate("SimulacionRestaurant", "Menu seleccionado"))
        item = self.tbl_simulacion.horizontalHeaderItem(11)
        item.setText(_translate("SimulacionRestaurant", "tiempo preparacion"))
        item = self.tbl_simulacion.horizontalHeaderItem(12)
        item.setText(_translate("SimulacionRestaurant", "Fin preparacion"))
        item = self.tbl_simulacion.horizontalHeaderItem(13)
        item.setText(_translate("SimulacionRestaurant", "Fin pedido mesa "))
        item = self.tbl_simulacion.horizontalHeaderItem(14)
        item.setText(_translate("SimulacionRestaurant", "tiempo llevado de pedido"))
        item = self.tbl_simulacion.horizontalHeaderItem(15)
        item.setText(_translate("SimulacionRestaurant", "Fin llevado de pedido"))
        item = self.tbl_simulacion.horizontalHeaderItem(16)
        item.setText(_translate("SimulacionRestaurant", "RND 1"))
        item = self.tbl_simulacion.horizontalHeaderItem(17)
        item.setText(_translate("SimulacionRestaurant", "RND 2"))
        item = self.tbl_simulacion.horizontalHeaderItem(18)
        item.setText(_translate("SimulacionRestaurant", "N1"))
        item = self.tbl_simulacion.horizontalHeaderItem(19)
        item.setText(_translate("SimulacionRestaurant", "N2"))
        item = self.tbl_simulacion.horizontalHeaderItem(20)
        item.setText(_translate("SimulacionRestaurant", "tiempo en comer"))
        item = self.tbl_simulacion.horizontalHeaderItem(21)
        item.setText(_translate("SimulacionRestaurant", "Fin comer mesa"))
        item = self.tbl_simulacion.horizontalHeaderItem(22)
        item.setText(_translate("SimulacionRestaurant", "Mesa Estado"))
        item = self.tbl_simulacion.horizontalHeaderItem(23)
        item.setText(_translate("SimulacionRestaurant", "Cola espera"))
        item = self.tbl_simulacion.horizontalHeaderItem(24)
        item.setText(_translate("SimulacionRestaurant", "Mozo"))
        item = self.tbl_simulacion.horizontalHeaderItem(25)
        item.setText(_translate("SimulacionRestaurant", "Mozo Estado"))
        item = self.tbl_simulacion.horizontalHeaderItem(26)
        item.setText(_translate("SimulacionRestaurant", "Acumulador Personas"))
        item = self.tbl_simulacion.horizontalHeaderItem(27)
        item.setText(_translate("SimulacionRestaurant", "Acumulador Rechazadas"))
        item = self.tbl_simulacion.horizontalHeaderItem(28)
        item.setText(_translate("SimulacionRestaurant", "Grupo"))
        item = self.tbl_simulacion.horizontalHeaderItem(29)
        item.setText(_translate("SimulacionRestaurant", "Estado"))
    
    def confirm_delete_row_menu(self, row, column):
        """Muestra un mensaje de confirmación para borrar una fila."""
        # Crear un QMessageBox para la confirmación
        if row == self.tbl_menu.rowCount() - 1:
            return
        reply = QMessageBox.question(
            self.tbl_menu,  # Usamos self.tbl_menu como el padre (puedes usar SimulacionRestaurant si prefieres)
            "Confirmar eliminación", 
            f"¿Estás seguro de que deseas eliminar la fila {row + 1}?", 
            QMessageBox.Yes | QMessageBox.No,
            QMessageBox.No  # Valor predeterminado (No)
        )
        if reply == QMessageBox.Yes:
            self.tbl_menu.removeRow(row)  # Eliminar la fila seleccionada
    def agregarFilaGrupo(self):
        table = self.tbl_grupo
        if table.rowCount() == 0:
            table.setRowCount(2)
            table.setItem(1, 0, QTableWidgetItem("Total"))
        else:
            rowPosition = table.rowCount()-1
            table.insertRow(rowPosition)
    def agregarFilaMenu(self):
        table = self.tbl_menu
        if table.rowCount() == 0:
            table.setRowCount(2)
            table.setItem(1, 0, QTableWidgetItem("Total"))
        else:
            rowPosition = table.rowCount()-1
            table.insertRow(rowPosition)
    def confirm_delete_row_grupo(self, row, column):
        """Muestra un mensaje de confirmación para borrar una fila."""
        # Crear un QMessageBox para la confirmación
        if row == self.tbl_grupo.rowCount() - 1:
            return
        reply = QMessageBox.question(
            self.tbl_grupo,
            "Confirmar eliminación", 
            f"¿Estás seguro de que deseas eliminar la fila {row + 1}?", 
            QMessageBox.Yes | QMessageBox.No,
            QMessageBox.No  
        )
        
        if reply == QMessageBox.Yes:
            self.tbl_grupo.removeRow(row)  # Eliminar la fila seleccionada
    def mostrarError(self, mensaje):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)
        msg.setText("Error")
        msg.setInformativeText(mensaje)
        msg.setWindowTitle("Error")
        msg.exec_()
    def validarTablaMenu(self):
        #Validar que la tabla de menu tenga al menos un item
        if self.tbl_menu.rowCount() == 0:
            self.mostrarError("Debe haber al menos un item en el menu")
            return False
        suma = 0
        for i in range(self.tbl_menu.rowCount() - 1 ):
            try:
                #Validar que los porcentajes sumen 100
                p = np.float64(self.tbl_menu.item(i, 1).text().replace("%", ""))
                min = np.float64(self.tbl_menu.item(i, 2).text())
                suma += p
                #Validar que sean numeros
            
                p = np.float64(p)
                min = np.float64(min)
            except:
                self.mostrarError("Los porcentajes o minutos deben ser numeros")
                return False
            if p == 100:
                self.mostrarError("Los porcentajes deben estar dar 100")
                return False
        self.tbl_menu.item(self.tbl_menu.rowCount() - 1, 1).setText(f'{suma}%')
        self.tbl_menu.item(self.tbl_menu.rowCount() - 1, 0).setText(f'{self.tbl_menu.rowCount() - 1}')
        if suma != 100:
            self.mostrarError("Los porcentajes deben sumar 100")
            return False

    def validarTablaGrupo(self):
        #Validar que la tabla de menu tenga al menos un item
        if self.tbl_grupo.rowCount() == 0:
            self.mostrarError("Debe haber al menos un item en el menu")
            return False
        suma = 0
        for i in range(self.tbl_grupo.rowCount() - 1 ):
            try:
                #Validar que los porcentajes sumen 100
                p = np.float64(self.tbl_grupo.item(i, 1).text().replace("%", ""))
                suma += p
                #Validar que sean numeros
                p = np.float64(p)
            except:
                self.mostrarError("Los porcentajes deben ser numeros")
                return False
            if p == 100:
                self.mostrarError("Los porcentajes deben estar dar 100")
                return False
        self.tbl_grupo.item(self.tbl_grupo.rowCount() - 1, 1).setText(f'{suma}%')
        self.tbl_grupo.item(self.tbl_grupo.rowCount() - 1, 0).setText(f'Total')
        if suma != 100:
            self.mostrarError("Los porcentajes deben sumar 100")
            return False
    def simular(self):
        #Datos simulacion
        minuto_inicial = np.float64(self.input_i0.value())
        minuto_corte = np.float64(self.input_tf.value())
        mostrar_desde = np.int32(self.input_i.value())
        iteraciones_a_mostrar = np.int32(self.input_i.value())

        #Datos restaurante
        cant_mesas = np.int32(self.input_mesas_2.value())
        cant_mozos = np.int32(self.input_mozos_2.value())

        #Datos eventos
        llegada_clientes_min = np.float64(self.input_llegadaClientes.value())
        llegada_clientes_es_media = self.check_media_llegadaClientes.isChecked()

        toma_pedido_min = np.float64(self.input_tomaPedido.value())
        toma_pedido_es_media = self.check_media_tomaPedido.isChecked()

        llevado_pedido_min = np.float64(self.input_llevadoPedido.value())
        llevado_pedido_es_media = self.check_media_llevadoPedido.isChecked()

        media_comer = np.float64(self.input_comer_media.value())
        comer_desv_estandar = np.float64(self.input_comer_devEstandar.value())

        self.validarTablaMenu()
        self.validarTablaGrupo()
        #Datos menu
        menu = []
        for i in range(self.tbl_menu.rowCount()-1):
            #Foramto de fila  {"Menu": "Tm1", "P(%)": 0.33, "Minutos preparacion": 10}
            #le sacamos el % al valor de la probabilidad y dividimos por 100
            p0 = np.float64(self.tbl_menu.item(i, 1).text().replace("%", "")) / 100
            menu.append({"Menu": self.tbl_menu.item(i, 0).text(), "P(%)": p0, "Minutos preparacion": np.float64(self.tbl_menu.item(i, 2).text())})
        
        #Datos grupos
        grupos = []
        for i in range(self.tbl_grupo.rowCount()-1):
            #Formato de fila  {"Tamaño": 1, "P(%)": 0.25}
            #le sacamos el % al valor de la probabilidad y dividimos por 100
            p = np.float64(self.tbl_grupo.item(i, 1).text().replace("%", "")) / 100
            grupos.append({"Tamaño": np.int32(self.tbl_grupo.item(i, 0).text()), "P(%)": p})
        
        #Simulacion
        simulacion = Simulacion(
        seed = 2,
        minuto_inicial=minuto_inicial,
        minuto_corte=minuto_corte,
        mostrar_desde=mostrar_desde,
        iteraciones_a_mostrar=iteraciones_a_mostrar,
        cant_mesas=cant_mesas,
        cant_mozos=cant_mozos,
        llegada_clientes_min=llegada_clientes_min,
        llegada_clientes_es_media=llegada_clientes_es_media,
        toma_pedido_min=toma_pedido_min,
        toma_pedido_es_media=toma_pedido_es_media,
        llevado_pedido_min=llevado_pedido_min,
        llevado_pedido_es_media=llevado_pedido_es_media,
        comer_media=media_comer,
        comer_desv_estandar=comer_desv_estandar,
        menu_items=menu,
        grupos_items=grupos
    )
        simulacion.simular()
        filas_rto,resultados = simulacion.get_resultados()
        self.cargarTblSimulacion(filas_rto,resultados)
    def cargarTblSimulacion(self,filas,resultados):
        self.tbl_simulacion.setRowCount(0)

        if not filas:  
            return

        columnas = list(filas[-1].keys())
        self.tbl_simulacion.setColumnCount(len(columnas))
        self.tbl_simulacion.setHorizontalHeaderLabels(columnas)

        for i, fila in enumerate(filas):
            self.tbl_simulacion.insertRow(i)
            iteracion = str(fila.get("i", ""))
            self.tbl_simulacion.setVerticalHeaderItem(i, QTableWidgetItem(iteracion))
            for j, (columna, valor) in enumerate(fila.items()):
                if valor =="None":
                    valor = ""
                item = QTableWidgetItem(str(valor))
                self.tbl_simulacion.setItem(i, j, item)
        self.tbl_simulacion.removeColumn(0)
        self.tbl_simulacion.resizeColumnsToContents()
        self.rta_personas.setText(str(resultados["personas_totales"]))
        self.rta_atendidas.setText(str(resultados["personas_atendidas"]))
        self.rta_rechazadas_2.setText(str(resultados["personas_rechazadas"]))
        self.rta_porcentaje_rechazadas.setText(str(resultados["porcentaje_rechazo"]))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    SimulacionRestaurant = QtWidgets.QWidget()
    ui = Ui_SimulacionRestaurant()
    ui.setupUi(SimulacionRestaurant)
    SimulacionRestaurant.show()
    sys.exit(app.exec_())
